State of Plugin   was Re  Java for Mac OS X      Update   and       Update   are live On May           at      AM  Michael Hall wrote     On May           at      AM  Mike Swingler wrote          On May           at      PM  Michael Hall wrote            On May           at      PM  Mike Swingler wrote              Firefox is hardwired to Plugin  with the JEP MRJ  unless you remove   it them from  app  Contents MacOS plugins            Are you saying that if this is done for Firefox  the   Contents MacOS plugins files are  removed   then plugin  will   automatically get picked up and work correctly           Yes  I usually create a new directory    Firefox app Contents MacOS plugins disabled  and move both   JavaEmbeddingPlugin bundle and MRJPlugin plugin into that directory so I   still have them around           I m at a complete loss why this doesn t work for Camino         Both Mozilla right  Googling last night Firefox I think was the only   one that came in both older Carbon and newer Cocoa flavors  But not sure   why they d work different in that same setup either    Wouldn t some way for these other browsers to control this other than   manipulating files be a little better  How many users not fortunate   enough to frequent the java dev list would be aware they can do this  Is   there an official Apple preference for either plugin or would the   default setting just de facto be that  Is there any way to provide  rd   party access to java preferences settings   I wouldn t suggest putting any time into engineering a Java specific   switch which is only going to be used by an audience of developers  who   can follow steps on a wiki until Mozilla is ready to make the switch for   all of their customers  I think the plan is to just cut over completely   to Plugin  and drop support for the JEP at some point  and we had to   ship Update       with the Plugin  symlink present in  Library Internet   Plug Ins to make that a possibility   But really someone from Mozilla   would be best to comment on how and when they are planning to do what   I don t believe it makes sense for Apple to say which plugin  should be   the default for all browsers   Plugin  is simply the default for Safari   for now  and will likely remain the default forever on Leopard   Chrome   never bothered to implement a compatibility hack to load Plugin   and   simply did without Java support until Apple shipped an NPAPI Plugin    that could render cooperatively via CoreGraphics  and didn t use an   overlay window   Obviously  Plugin  is a continuing work in progress that has several   more technical challenges ahead  like interleaving hardware accelerated   drawing   will likely require changes to browsers  like adopting   CoreAnimation NPAPI drawing model    rd party libraries  like JOGL   and   will probably provide a tiered user experience based on which browser   supports which drawing models  event models  and other features  We are   also still iterating on the user experience of how to handle applets   that open their own windows and dialogs that are in a different process   from the browser   Currently  we don t have any stored setting which tracks the switch   between Plugin  or Plugin   The state of the Java Preferences UI is   actually just built from the presence or non presence of the   JavaPluginCocoa bundle symlink  In a future release when we make Plugin    the default for Safari  we ll simply delete the JavaPluginCocoa bundle   in  Library Internet Plug ins  which we know Mozilla does not use   and   alter Java Preferences to write out a symlink to   Library Internet   Plug ins instead  so the change is only scoped to the user  At least   that s the current plan  and it could change  but it s the best idea   we ve got so far   I hope this provides some perspective on where we d like to go with   Plugin   Mike Swingler Java Runtime Engineer Apple Inc                                                    Do not post admin requests to the list  They will be ignored  Java dev mailing list          Help Unsubscribe Update your Subscription     This email sent to mlsubscriber    